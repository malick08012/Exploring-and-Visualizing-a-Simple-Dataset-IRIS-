# -*- coding: utf-8 -*-
"""Exploring and Visualizing a Simple Dataset ( IRIS )

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CUbhnn0G4qJU8FrbqOQvwX7UIuCWQJvh

#Mounting Google Drive
Mount/Connect Google Drive to access files (like our dataset) stored there.
"""

from google.colab import drive
drive.mount('/content/drive')

"""#Basic Labraries"""

# Basic libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""#Upload Dataset
Using this command we upload dataset set which is directly stored in our google drive and from there we can access our dataset.
"""

from google.colab import files
uploaded = files.upload()  # Opens a file picker

"""#Load Dataset And View Basic Information (Shape, Columns, First Rows)
In this step i use "pandas" to load the Iris dataset from CSV file which i upload above. Pandas makes it easy to read, manipulate, and analyze data.This is the first step in any data analysis workflow.

 Viewing Dataset Structure:

 We check the shape of the dataset to know how many rows and columns it contains. We also print column names to understand the features, and df.head() shows the first few records to get an initial look at the data.
"""

import pandas as pd

# Load the dataset
df = pd.read_csv('Iris.csv')

# Show basic info
print("ðŸ”¹ Shape of dataset:", df.shape)
print("ðŸ”¹ Column names:", df.columns.tolist())
df.head(10)

"""#Dataset Summary
.info() provides details about data types, missing values, and memory usage.

.describe() gives statistical summaries (mean, std, min, max, quartiles) of each numeric column.

This helps us understand the range and distribution of values and identify any irregularities early on.
"""

# Summary of dataset
df.info()

# Descriptive statistics
df.describe()

"""#Scatter Plot to Visualize Feature Relationships
I use scatter plots to visualize the relationships between different features. This helps identify any patterns, correlations, or separation between the target classes.

For multiple features, we can use seaborn.pairplot() to create a grid of scatter plots.
"""

import matplotlib.pyplot as plt
import seaborn as sns

# Set a style
sns.set(style='whitegrid')

# Pairplot shows relationships between all pairs of features
sns.pairplot(df, hue='Species', markers=["o", "s", "D"])
plt.suptitle("Pairwise Scatter Plots by Species", y=1.02)
plt.show()

"""#Scatter Plot Explanation
Each dot is one flower if dots of the same species are grouped together, it means those features help separate classes.

This plot shows how features like petal length and width vary by species. We can see that Setosa is clearly separated from the others, which means these features are useful for classification.

#Histograms for Value Distribution
Histograms show how values are distributed for each numeric feature. This helps us understand skewness, central tendency, and spread. It also helps in identifying whether the data follows a normal distribution or not.
"""

df.drop('Id', axis=1).hist(bins=20, figsize=(10,8), grid=False)
plt.suptitle("Histograms of Iris Features", fontsize=16)
plt.show()

"""#Histogram Explanation
Peaks = common values

Wide spread = lots of variation

This histogram shows the distribution of sepal lengths. Most flowers have sepal lengths between 5.0 and 6.0 cm

#Box Plots for Outlier Detection
Box plots visualize the median, quartiles, and potential outliers in the data. They are especially useful for detecting unusual values that might affect model performance or statistical analysis.
"""

plt.figure(figsize=(10, 6))
sns.boxplot(data=df.drop('Id', axis=1), orient='h')
plt.title("Boxplot of Iris Features")
plt.show()

"""#Box Plot Explanation
The box shows the middle 50% of data.

Lines (whiskers) show the full spread

Dots outside = outliers

This box plot shows the spread of petal widths for each species. The median values are different, and we can also spot a few outliers in Versicolor

#Final Insights of the Project
1. Clean and Well-Structured Data:

The Iris dataset is well-formatted with no missing values, and all columns have appropriate data types.

The dataset contains 150 rows and 5 columns, with 4 numerical features and 1 categorical target.

2. Clear Differences in Species Based on Features:

Petal length and petal width are the most useful features for distinguishing between different species.

Iris-setosa is easily separable from other species due to its significantly smaller petal size.

3. Visual Patterns and Trends:

Scatter plots show strong clustering patterns for different species, especially using petal features.

Histograms reveal that some features like petal width are not normally distributed, indicating specific trends per species.

Box plots help spot outliers, particularly in versicolor and virginica, and show medians and spread of the data.

4. Overall Observations:

This exploratory analysis provides a strong understanding of the feature distributions and how they relate to flower species.

The visualizations help us identify which features are most useful for future modeling or classification tasks.
"""
